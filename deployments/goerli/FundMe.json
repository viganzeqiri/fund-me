{
  "address": "0x68BB2d413779F39136F9A32dD735CC43F723Fc54",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "NotEnoughFunds",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NotOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "WithdrawFailed",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MIN_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "i_owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x0c8a5d3abcd2f466ce4d9950b56ebb4bfeae7a211c773e67ffc87169751a6f3e",
  "receipt": {
    "to": null,
    "from": "0xDc3A186fB898669023289Fd66b68E4016875E011",
    "contractAddress": "0x68BB2d413779F39136F9A32dD735CC43F723Fc54",
    "transactionIndex": 48,
    "gasUsed": "694644",
    "logsBloom": "0x
    "blockHash": "0x0ce20da0c8fae2d429d77ce3fb2b1035847bd8c90a0c4a3c2b16395be2900c8c",
    "transactionHash": "0x0c8a5d3abcd2f466ce4d9950b56ebb4bfeae7a211c773e67ffc87169751a6f3e",
    "logs": [],
    "blockNumber": 8567953,
    "cumulativeGasUsed": "6158399",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5f4eC3Df9cbd43714FE2740f5E3616155c5b8419"
  ],
  "numDeployments": 1,
  "solcInputHash": "6837e4ce09a0aaa08fed20d0959d4ab6",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"NotEnoughFunds\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"WithdrawFailed\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MIN_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.9;\\n\\nimport \\\"./PriceConvertor.sol\\\";\\n\\nerror NotOwner();\\nerror NotEnoughFunds();\\nerror WithdrawFailed();\\n\\ncontract FundMe {\\n    using PriceConvertor for uint256;\\n\\n    uint256 public constant MIN_USD = 50 * 1e18;\\n    address public immutable i_owner;\\n\\n    address[] public funders;\\n    mapping(address => uint256) public addressToAmountFunded;\\n\\n    AggregatorV3Interface priceFeed;\\n\\n    constructor(address priceFeedAddress) {\\n        i_owner = msg.sender;\\n        priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n    modifier onlyOwner() {\\n        if (msg.sender != i_owner) {\\n            revert NotOwner();\\n        }\\n        _;\\n    }\\n\\n    function fund() public payable {\\n        if (msg.value.getConversionRate(priceFeed) < MIN_USD) {\\n            revert NotEnoughFunds();\\n        }\\n        funders.push(msg.sender);\\n    }\\n\\n    function withdraw() public onlyOwner {\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = funders[funderIndex];\\n            addressToAmountFunded[funder] = 0;\\n        }\\n\\n        funders = new address[](0);\\n\\n        // 1. transfer\\n        // payable(msg.sender).transfer(address(this).balance);\\n\\n        // 2. send\\n        // bool sendSuccess = payable(msg.sender).send(address(this).balance);\\n        // if (!sendSuccess) {\\n        //     revert WithdrawFailed();\\n        // }\\n\\n        // 3. call\\n        (bool callSuccess, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }(\\\"\\\");\\n        if (!callSuccess) {\\n            revert WithdrawFailed();\\n        }\\n    }\\n\\n    receive() external payable {\\n        fund();\\n    }\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n}\\n\",\"keccak256\":\"0x7091e4033fe11811720636efdc1066ef5abe690e298707b87ac84385b36df7a4\",\"license\":\"MIT\"},\"contracts/PriceConvertor.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.9;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\nlibrary PriceConvertor {\\n    function getPrice(\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        // ETH in USD\\n        (, int256 price, , , ) = priceFeed.latestRoundData();\\n\\n        return uint256(price * 1e10);\\n    }\\n\\n    function getConversionRate(\\n        uint256 ethAmount,\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18;\\n\\n        return ethAmountInUsd;\\n    }\\n}\\n\",\"keccak256\":\"0x6e740dc23043e3c960ec2a6fecc7facd6a5e4b57c20533e5de98b90c5742f400\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b50604051610c8b380380610c8b83398181016040528101906100329190610110565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff168152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061013d565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100dd826100b2565b9050919050565b6100ed816100d2565b81146100f857600080fd5b50565b60008151905061010a816100e4565b92915050565b600060208284031215610126576101256100ad565b5b6000610134848285016100fb565b91505092915050565b608051610b2c61015f6000396000818161024e015261049d0152610b2c6000f3fe6080604052600436106100595760003560e01c8063213dbea2146100725780633ccfd60b1461009d5780633e47d6f3146100b4578063b60d4288146100f1578063dba6335f146100fb578063dc0d3dff1461012657610068565b3661006857610066610163565b005b610070610163565b005b34801561007e57600080fd5b5061008761023f565b604051610094919061068b565b60405180910390f35b3480156100a957600080fd5b506100b261024c565b005b3480156100c057600080fd5b506100db60048036038101906100d69190610709565b610483565b6040516100e8919061068b565b60405180910390f35b6100f9610163565b005b34801561010757600080fd5b5061011061049b565b60405161011d9190610745565b60405180910390f35b34801561013257600080fd5b5061014d6004803603810190610148919061078c565b6104bf565b60405161015a9190610745565b60405180910390f35b6802b5e3af16b18800006101a2600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346104fe90919063ffffffff16565b10156101da576040517f81b5ad6800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6802b5e3af16b188000081565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102d1576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60008054905081101561037c5760008082815481106102f6576102f56107b9565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061037490610817565b9150506102d4565b50600067ffffffffffffffff8111156103985761039761085f565b5b6040519080825280602002602001820160405280156103c65781602001602082028036833780820191505090505b50600090805190602001906103dc9291906105cb565b5060003373ffffffffffffffffffffffffffffffffffffffff1647604051610403906108bf565b60006040518083038185875af1925050503d8060008114610440576040519150601f19603f3d011682016040523d82523d6000602084013e610445565b606091505b5050905080610480576040517f750b219c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50565b60016020528060005260406000206000915090505481565b7f000000000000000000000000000000000000000000000000000000000000000081565b600081815481106104cf57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008061050a8361053a565b90506000670de0b6b3a7640000858361052391906108d4565b61052d9190610945565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610588573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105ac9190610a03565b5050509150506402540be400816105c39190610a7e565b915050919050565b828054828255906000526020600020908101928215610644579160200282015b828111156106435782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906105eb565b5b5090506106519190610655565b5090565b5b8082111561066e576000816000905550600101610656565b5090565b6000819050919050565b61068581610672565b82525050565b60006020820190506106a0600083018461067c565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006106d6826106ab565b9050919050565b6106e6816106cb565b81146106f157600080fd5b50565b600081359050610703816106dd565b92915050565b60006020828403121561071f5761071e6106a6565b5b600061072d848285016106f4565b91505092915050565b61073f816106cb565b82525050565b600060208201905061075a6000830184610736565b92915050565b61076981610672565b811461077457600080fd5b50565b60008135905061078681610760565b92915050565b6000602082840312156107a2576107a16106a6565b5b60006107b084828501610777565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061082282610672565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610854576108536107e8565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b60006108a960008361088e565b91506108b482610899565b600082019050919050565b60006108ca8261089c565b9150819050919050565b60006108df82610672565b91506108ea83610672565b92508282026108f881610672565b9150828204841483151761090f5761090e6107e8565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061095082610672565b915061095b83610672565b92508261096b5761096a610916565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b61099581610976565b81146109a057600080fd5b50565b6000815190506109b28161098c565b92915050565b6000819050919050565b6109cb816109b8565b81146109d657600080fd5b50565b6000815190506109e8816109c2565b92915050565b6000815190506109fd81610760565b92915050565b600080600080600060a08688031215610a1f57610a1e6106a6565b5b6000610a2d888289016109a3565b9550506020610a3e888289016109d9565b9450506040610a4f888289016109ee565b9350506060610a60888289016109ee565b9250506080610a71888289016109a3565b9150509295509295909350565b6000610a89826109b8565b9150610a94836109b8565b9250828202610aa2816109b8565b91507f80000000000000000000000000000000000000000000000000000000000000008414600084121615610ada57610ad96107e8565b5b8282058414831517610aef57610aee6107e8565b5b509291505056fea264697066735822122012eae64fd5ec5813b0096faa4668bd94157a46fb8ad5501045375e6a236fad8c64736f6c63430008110033",
  "deployedBytecode": "0x6080604052600436106100595760003560e01c8063213dbea2146100725780633ccfd60b1461009d5780633e47d6f3146100b4578063b60d4288146100f1578063dba6335f146100fb578063dc0d3dff1461012657610068565b3661006857610066610163565b005b610070610163565b005b34801561007e57600080fd5b5061008761023f565b604051610094919061068b565b60405180910390f35b3480156100a957600080fd5b506100b261024c565b005b3480156100c057600080fd5b506100db60048036038101906100d69190610709565b610483565b6040516100e8919061068b565b60405180910390f35b6100f9610163565b005b34801561010757600080fd5b5061011061049b565b60405161011d9190610745565b60405180910390f35b34801561013257600080fd5b5061014d6004803603810190610148919061078c565b6104bf565b60405161015a9190610745565b60405180910390f35b6802b5e3af16b18800006101a2600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346104fe90919063ffffffff16565b10156101da576040517f81b5ad6800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6802b5e3af16b188000081565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102d1576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60008054905081101561037c5760008082815481106102f6576102f56107b9565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061037490610817565b9150506102d4565b50600067ffffffffffffffff8111156103985761039761085f565b5b6040519080825280602002602001820160405280156103c65781602001602082028036833780820191505090505b50600090805190602001906103dc9291906105cb565b5060003373ffffffffffffffffffffffffffffffffffffffff1647604051610403906108bf565b60006040518083038185875af1925050503d8060008114610440576040519150601f19603f3d011682016040523d82523d6000602084013e610445565b606091505b5050905080610480576040517f750b219c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50565b60016020528060005260406000206000915090505481565b7f000000000000000000000000000000000000000000000000000000000000000081565b600081815481106104cf57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008061050a8361053a565b90506000670de0b6b3a7640000858361052391906108d4565b61052d9190610945565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610588573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105ac9190610a03565b5050509150506402540be400816105c39190610a7e565b915050919050565b828054828255906000526020600020908101928215610644579160200282015b828111156106435782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906105eb565b5b5090506106519190610655565b5090565b5b8082111561066e576000816000905550600101610656565b5090565b6000819050919050565b61068581610672565b82525050565b60006020820190506106a0600083018461067c565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006106d6826106ab565b9050919050565b6106e6816106cb565b81146106f157600080fd5b50565b600081359050610703816106dd565b92915050565b60006020828403121561071f5761071e6106a6565b5b600061072d848285016106f4565b91505092915050565b61073f816106cb565b82525050565b600060208201905061075a6000830184610736565b92915050565b61076981610672565b811461077457600080fd5b50565b60008135905061078681610760565b92915050565b6000602082840312156107a2576107a16106a6565b5b60006107b084828501610777565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061082282610672565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610854576108536107e8565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b60006108a960008361088e565b91506108b482610899565b600082019050919050565b60006108ca8261089c565b9150819050919050565b60006108df82610672565b91506108ea83610672565b92508282026108f881610672565b9150828204841483151761090f5761090e6107e8565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061095082610672565b915061095b83610672565b92508261096b5761096a610916565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b61099581610976565b81146109a057600080fd5b50565b6000815190506109b28161098c565b92915050565b6000819050919050565b6109cb816109b8565b81146109d657600080fd5b50565b6000815190506109e8816109c2565b92915050565b6000815190506109fd81610760565b92915050565b600080600080600060a08688031215610a1f57610a1e6106a6565b5b6000610a2d888289016109a3565b9550506020610a3e888289016109d9565b9450506040610a4f888289016109ee565b9350506060610a60888289016109ee565b9250506080610a71888289016109a3565b9150509295509295909350565b6000610a89826109b8565b9150610a94836109b8565b9250828202610aa2816109b8565b91507f80000000000000000000000000000000000000000000000000000000000000008414600084121615610ada57610ad96107e8565b5b8282058414831517610aef57610aee6107e8565b5b509291505056fea264697066735822122012eae64fd5ec5813b0096faa4668bd94157a46fb8ad5501045375e6a236fad8c64736f6c63430008110033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 67,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "funders",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 71,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "addressToAmountFunded",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 74,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}